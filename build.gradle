buildscript {
    ext.kotlin_version = "1.3.72"
    ext.build_gradle_version = '3.6.3'

    repositories {
        maven { url 'https://maven.aliyun.com/repository/public/' } //jcenter和central
        maven { url 'https://maven.aliyun.com/repository/google/' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin/' }
        google()
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
}

repositories {
    maven { url 'https://maven.aliyun.com/repository/public/' } //jcenter和central
    maven { url 'https://maven.aliyun.com/repository/google/' }
    maven { url "https://jitpack.io" }
    mavenLocal()
    mavenCentral()
    google()
}

apply plugin: 'java-library'
apply plugin: 'kotlin'

group "tiiehenry.script.wrapper"
version "1.2.3"

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

apply plugin: 'maven'
// 获取本地仓库路径
if (project.version != "unspecified") {
    println project.group + ":" + project.name + ":" + project.version
    apply plugin: 'maven'
    // 获取本地仓库路径
    def localRepositoryPath = 'file://' + new File(System.getProperty('user.home'), '.m2/repository').absolutePath
    //打包至本地仓库配置
    uploadArchives {
        repositories {
            //mavenDeployer 需要依赖 apply plugin: 'maven'
            mavenDeployer {
                repository(url: localRepositoryPath)
                pom.project {
                    name = project.name        // 当前项目名称
                    version = project.version   //当前项目版本  0.0.1
                    groupId = project.group     //  当前项目组  com.xxx
                }
            }
        }
    }
}